{
  "id": "f07fa5d697faa82808d189f9ebf3d839",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/IUpsideV1Factory.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n\n/// @title The interface for the Upside V1 Factory\n/// @notice The Upside V1 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUpsideV1Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param owner The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed owner,\n        uint24 indexed fee,\n        address pool\n    );\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param _owner The contract address of the other token\n    /// @return pool The pool address\n    function getPool(\n        address _owner\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param _owner The other of the two tokens in the desired pool\n    /// @param _fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address _owner,\n        uint24 _fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n}\n"
      },
      "contracts/UpsideV1Factory.sol": {
        "content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IUpsideV1Factory.sol\";\n\nimport \"./UpsideV1PoolDeployer.sol\";\n\nimport \"./UpsideV1Pool.sol\";\n\n\n/// @title Canonical Uniswap V3 factory\n/// @notice Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees\ncontract UpsideV1Factory is IUpsideV1Factory, UpsideV1PoolDeployer {\n    /// @inheritdoc IUpsideV1Factory\n    address public override owner;\n\n    /// @inheritdoc IUpsideV1Factory\n    mapping(address => address) public override getPool;\n\n    constructor() {\n        owner = msg.sender;\n        emit OwnerChanged(address(0), msg.sender);\n    }\n\n    /// @inheritdoc IUpsideV1Factory\n    function createPool(\n        address _owner,\n        uint24 _fee\n    ) external override returns (address pool) {\n        require(_owner != address(0), \"UpsideV1: ZERO_ADDRESS\");\n        require(getPool[_owner] == address(0));\n\n        pool = deploy(address(this), _owner, _fee);\n        getPool[_owner] = pool;\n\n        emit PoolCreated(_owner, _fee, pool);\n    }\n\n    /// @inheritdoc IUpsideV1Factory\n    function setOwner(address _owner) external override {\n        require(msg.sender == owner);\n        emit OwnerChanged(owner, _owner);\n        owner = _owner;\n    }\n}\n"
      },
      "contracts/UpsideV1PoolDeployer.sol": {
        "content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IUpsideV1PoolDeployer.sol\";\n\nimport \"./UpsideV1Pool.sol\";\n\n\ncontract UpsideV1PoolDeployer is IUpsideV1PoolDeployer {\n    struct Parameters {\n        address owner;\n        address factory;\n        uint24 fee;\n    }\n\n    Parameters public override parameters;\n\n    function deploy(\n        address factory,\n        address owner,\n        uint24 fee\n    ) internal returns (address pool) {\n        parameters = Parameters({factory: factory, owner: owner, fee: fee});\n        pool = address(new UpsideV1Pool{salt: keccak256(abi.encode(owner, fee))}());\n        delete parameters;\n    }\n}\n"
      },
      "contracts/UpsideV1Pool.sol": {
        "content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.0;\n\n// import \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n// import \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\n// import \"@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol\";\n\nimport \"./interfaces/IUpsideV1Pool.sol\";\nimport \"./interfaces/IUpsideV1PoolDeployer.sol\";\n\n\n// @todo:\n// 1. Remove Karma & add ControlledToken -- includes Karma + Sponsor\n// 2. Identify how ERC1155 enables ERC721\n// 3. Address can be DID? Can we switch addr?\n// 4. Functions: Deposit, Withdraw, Transfer.\ncontract UpsideV1Pool is IUpsideV1Pool {\n\n    address public immutable override factory;\n\n    address public immutable override owner;\n\n    uint24 public immutable override fee;\n\n    constructor() public {\n        (factory, owner, fee) = IUpsideV1PoolDeployer(msg.sender).parameters();\n    }\n}\n"
      },
      "contracts/interfaces/IUpsideV1PoolDeployer.sol": {
        "content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\n\n/// @title An interface for a contract that is capable of deploying Uniswap V3 Pools\n/// @notice A contract that constructs a pool must implement this to pass arguments to the pool\n/// @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n/// of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\ninterface IUpsideV1PoolDeployer {\n    /// @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n    /// @dev Called by the pool constructor to fetch the parameters of the pool\n    /// Returns factory The factory address\n    /// Returns token0 The first token of the pool by address sort order\n    /// Returns token1 The second token of the pool by address sort order\n    /// Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// Returns tickSpacing The minimum number of ticks between initialized ticks\n    function parameters()\n        external\n        view\n        returns (\n            address owner,\n            address factory,\n            uint24 fee\n        );\n}\n"
      },
      "contracts/interfaces/IUpsideV1Pool.sol": {
        "content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.5.0;\n\nimport \"./pool/IUpsideV1PoolImmutables.sol\";\n\n\ninterface IUpsideV1Pool is IUniswapV3PoolImmutables {\n\n}\n"
      },
      "contracts/interfaces/pool/IUpsideV1PoolImmutables.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function owner() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/UpsideV1Factory.sol": {
        "UpsideV1Factory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "PoolCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "_fee",
                  "type": "uint24"
                }
              ],
              "name": "createPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "parameters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a3610d01806100bc6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806313af40351461005c57806389035730146100785780638b078beb146100985780638da5cb5b146100c8578063bbe4f6db146100e6575b600080fd5b610076600480360381019061007191906106e2565b610116565b005b610080610230565b60405161008f939291906107c0565b60405180910390f35b6100b260048036038101906100ad919061070b565b610297565b6040516100bf91906107a5565b60405180910390f35b6100d0610485565b6040516100dd91906107a5565b60405180910390f35b61010060048036038101906100fb91906106e2565b6104ab565b60405161010d91906107a5565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900462ffffff16905083565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610820565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a057600080fd5b6103ab3084846104de565b905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508162ffffff168373ffffffffffffffffffffffffffffffffffffffff167ff22a25a14129cccb17bce9e817217f50b87f174703f53d602b376c35e04068818360405161047791906107a5565b60405180910390a392915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548162ffffff021916908362ffffff16021790555090505082826040516020016105f69291906107f7565b60405160208183030381529060405280519060200120604051610618906106ab565b8190604051809103906000f5905080158015610638573d6000803e3d6000fd5b5090506000806000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549062ffffff021916905550509392505050565b61040b806108c183390190565b6000813590506106c781610892565b92915050565b6000813590506106dc816108a9565b92915050565b6000602082840312156106f457600080fd5b6000610702848285016106b8565b91505092915050565b6000806040838503121561071e57600080fd5b600061072c858286016106b8565b925050602061073d858286016106cd565b9150509250929050565b61075081610851565b82525050565b6000610763601683610840565b91507f55707369646556313a205a45524f5f41444452455353000000000000000000006000830152602082019050919050565b61079f81610883565b82525050565b60006020820190506107ba6000830184610747565b92915050565b60006060820190506107d56000830186610747565b6107e26020830185610747565b6107ef6040830184610796565b949350505050565b600060408201905061080c6000830185610747565b6108196020830184610796565b9392505050565b6000602082019050818103600083015261083981610756565b9050919050565b600082825260208201905092915050565b600061085c82610863565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b61089b81610851565b81146108a657600080fd5b50565b6108b281610883565b81146108bd57600080fd5b5056fe60e060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1663890357306040518163ffffffff1660e01b815260040160606040518083038186803b15801561005757600080fd5b505afa15801561006b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008f9190610141565b8062ffffff1660c09062ffffff1660e81b8152508173ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508273ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506101ff565b600081519050610126816101d1565b92915050565b60008151905061013b816101e8565b92915050565b60008060006060848603121561015657600080fd5b600061016486828701610117565b935050602061017586828701610117565b92505060406101868682870161012c565b9150509250925092565b600061019b826101a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6101da81610190565b81146101e557600080fd5b50565b6101f1816101c2565b81146101fc57600080fd5b50565b60805160601c60a05160601c60c05160e81c6101d7610234600039600060ea0152600060a20152600060c601526101d76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063c45a015514610064578063ddca3f4314610082575b600080fd5b61004e6100a0565b60405161005b919061012a565b60405180910390f35b61006c6100c4565b604051610079919061012a565b60405180910390f35b61008a6100e8565b6040516100979190610145565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61011581610160565b82525050565b61012481610192565b82525050565b600060208201905061013f600083018461010c565b92915050565b600060208201905061015a600083018461011b565b92915050565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220fd53d19a4f6b8f18bad8eecfbacedd68541113433c43eb2b7d512dc4dc15954c64736f6c63430008000033a2646970667358221220ecfbfffa1d1bb3c4de5250a9dd8161186995cdd068ee3257c4f72458b0f0b44664736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD01 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x89035730 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8B078BEB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xBBE4F6DB EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AB ADDRESS DUP5 DUP5 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH3 0xFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF22A25A14129CCCB17BCE9E817217F50B87F174703F53D602B376C35E0406881 DUP4 PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F6 SWAP3 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x618 SWAP1 PUSH2 0x6AB JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x40B DUP1 PUSH2 0x8C1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C7 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DC DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP5 DUP3 DUP6 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72C DUP6 DUP3 DUP7 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x750 DUP2 PUSH2 0x851 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x763 PUSH1 0x16 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH32 0x55707369646556313A205A45524F5F4144445245535300000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x80C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x819 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x839 DUP2 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP3 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x851 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8B2 DUP2 PUSH2 0x883 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x89035730 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0xFFFFFF AND PUSH1 0xC0 SWAP1 PUSH3 0xFFFFFF AND PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x175 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x186 DUP7 DUP3 DUP8 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 PUSH2 0x1A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x190 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE8 SHR PUSH2 0x1D7 PUSH2 0x234 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xEA ADD MSTORE PUSH1 0x0 PUSH1 0xA2 ADD MSTORE PUSH1 0x0 PUSH1 0xC6 ADD MSTORE PUSH2 0x1D7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B DUP3 PUSH2 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MSTORE8 0xD1 SWAP11 0x4F PUSH12 0x8F18BAD8EECFBACEDD685411 SGT NUMBER EXTCODECOPY NUMBER 0xEB 0x2B PUSH30 0x512DC4DC15954C64736F6C63430008000033A2646970667358221220ECFB SELFDESTRUCT STATICCALL SAR SHL 0xB3 0xC4 0xDE MSTORE POP 0xA9 0xDD DUP2 PUSH2 0x1869 SWAP6 0xCD 0xD0 PUSH9 0xEE3257C4F72458B0F0 0xB4 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "311:956:0:-:0;;;552:100;;;;;;;;;;584:10;576:5;;:18;;;;;;;;;;;;;;;;;;634:10;609:36;;630:1;609:36;;;;;;;;;;;;311:956;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3733:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:7",
                            "type": ""
                          }
                        ],
                        "src": "7:139:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "203:86:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "213:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "222:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "222:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "277:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint24",
                                  "nodeType": "YulIdentifier",
                                  "src": "251:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "251:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "251:32:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "181:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "189:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "197:5:7",
                            "type": ""
                          }
                        ],
                        "src": "152:137:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "361:196:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "407:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "416:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "419:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "409:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "409:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "409:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "382:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "391:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "378:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "378:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "403:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "374:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "374:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "371:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "433:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "448:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "462:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "452:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "477:63:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "512:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "523:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "508:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "508:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "532:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "487:20:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "487:53:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "477:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "331:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "342:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "354:6:7",
                            "type": ""
                          }
                        ],
                        "src": "295:262:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "645:323:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "691:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "700:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "703:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "693:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "693:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "693:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "666:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "675:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "662:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "662:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "687:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "658:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "658:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "655:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "717:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "732:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "746:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "736:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "761:63:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "796:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "807:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "792:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "792:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "816:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "771:20:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "771:53:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "844:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "859:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "873:2:7",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "863:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "889:62:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "923:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "934:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "919:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "919:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "943:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint24",
                                      "nodeType": "YulIdentifier",
                                      "src": "899:19:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "899:52:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "889:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "607:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "618:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "630:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "638:6:7",
                            "type": ""
                          }
                        ],
                        "src": "563:405:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1039:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1056:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1079:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1061:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1061:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1049:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1049:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1049:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1027:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1034:3:7",
                            "type": ""
                          }
                        ],
                        "src": "974:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1244:174:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1254:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1320:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1325:2:7",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1261:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1254:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1349:3:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1354:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1345:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1345:11:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1358:24:7",
                                    "type": "",
                                    "value": "UpsideV1: ZERO_ADDRESS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1338:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1338:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1338:45:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1393:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1404:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1409:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1400:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1393:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1232:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1240:3:7",
                            "type": ""
                          }
                        ],
                        "src": "1098:320:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1487:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1504:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint24",
                                      "nodeType": "YulIdentifier",
                                      "src": "1509:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1509:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1497:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1497:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1475:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1482:3:7",
                            "type": ""
                          }
                        ],
                        "src": "1424:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1643:124:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1653:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1665:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1676:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1661:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1661:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1653:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1733:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1746:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1757:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1742:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1742:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1689:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1689:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1689:71:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1615:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1627:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1638:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1545:222:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1925:286:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1935:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1947:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1958:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1943:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1943:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1935:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2015:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2028:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2039:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2024:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2024:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1971:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1971:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1971:71:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2096:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2109:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2120:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2105:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2105:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2052:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2176:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2189:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2200:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2185:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2185:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2134:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2134:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2134:70:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1881:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1893:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1901:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1909:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1920:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1773:438:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2341:204:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2351:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2363:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2374:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2359:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2359:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2351:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2431:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2444:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2455:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2440:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2440:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2387:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2387:71:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2510:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2523:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2534:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2519:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2519:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2468:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2468:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2468:70:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint24__to_t_address_t_uint24__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2305:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2317:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2325:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2336:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2217:328:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2722:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2732:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2744:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2755:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2740:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2740:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2732:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2779:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2790:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2775:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2775:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "2798:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2804:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2794:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2794:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2768:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2768:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2768:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2824:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "2958:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2832:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2832:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2824:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2702:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2717:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2551:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3072:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3089:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3094:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3082:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3082:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3082:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3110:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3129:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3134:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3125:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3125:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3110:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3044:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3049:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "3060:11:7",
                            "type": ""
                          }
                        ],
                        "src": "2976:169:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3196:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3206:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3235:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "3217:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3217:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3206:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3178:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3188:7:7",
                            "type": ""
                          }
                        ],
                        "src": "3151:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3298:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3308:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3323:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3330:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3319:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3319:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3308:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3280:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3290:7:7",
                            "type": ""
                          }
                        ],
                        "src": "3253:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3429:47:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3439:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3454:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3461:8:7",
                                    "type": "",
                                    "value": "0xffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3450:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3450:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3439:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3411:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3421:7:7",
                            "type": ""
                          }
                        ],
                        "src": "3385:91:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3525:79:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3582:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3591:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3594:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3584:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3584:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3584:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3548:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3573:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "3555:17:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3555:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3545:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3545:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3538:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3538:43:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3535:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3518:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3482:122:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3652:78:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3708:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3717:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3720:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3710:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3710:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3710:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3675:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3699:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint24",
                                          "nodeType": "YulIdentifier",
                                          "src": "3682:16:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3682:23:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3672:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3672:34:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3665:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3665:42:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3662:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3645:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3610:120:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint24(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"UpsideV1: ZERO_ADDRESS\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint24__to_t_address_t_uint24__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806313af40351461005c57806389035730146100785780638b078beb146100985780638da5cb5b146100c8578063bbe4f6db146100e6575b600080fd5b610076600480360381019061007191906106e2565b610116565b005b610080610230565b60405161008f939291906107c0565b60405180910390f35b6100b260048036038101906100ad919061070b565b610297565b6040516100bf91906107a5565b60405180910390f35b6100d0610485565b6040516100dd91906107a5565b60405180910390f35b61010060048036038101906100fb91906106e2565b6104ab565b60405161010d91906107a5565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900462ffffff16905083565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610820565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a057600080fd5b6103ab3084846104de565b905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508162ffffff168373ffffffffffffffffffffffffffffffffffffffff167ff22a25a14129cccb17bce9e817217f50b87f174703f53d602b376c35e04068818360405161047791906107a5565b60405180910390a392915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548162ffffff021916908362ffffff16021790555090505082826040516020016105f69291906107f7565b60405160208183030381529060405280519060200120604051610618906106ab565b8190604051809103906000f5905080158015610638573d6000803e3d6000fd5b5090506000806000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549062ffffff021916905550509392505050565b61040b806108c183390190565b6000813590506106c781610892565b92915050565b6000813590506106dc816108a9565b92915050565b6000602082840312156106f457600080fd5b6000610702848285016106b8565b91505092915050565b6000806040838503121561071e57600080fd5b600061072c858286016106b8565b925050602061073d858286016106cd565b9150509250929050565b61075081610851565b82525050565b6000610763601683610840565b91507f55707369646556313a205a45524f5f41444452455353000000000000000000006000830152602082019050919050565b61079f81610883565b82525050565b60006020820190506107ba6000830184610747565b92915050565b60006060820190506107d56000830186610747565b6107e26020830185610747565b6107ef6040830184610796565b949350505050565b600060408201905061080c6000830185610747565b6108196020830184610796565b9392505050565b6000602082019050818103600083015261083981610756565b9050919050565b600082825260208201905092915050565b600061085c82610863565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b61089b81610851565b81146108a657600080fd5b50565b6108b281610883565b81146108bd57600080fd5b5056fe60e060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1663890357306040518163ffffffff1660e01b815260040160606040518083038186803b15801561005757600080fd5b505afa15801561006b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008f9190610141565b8062ffffff1660c09062ffffff1660e81b8152508173ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508273ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506101ff565b600081519050610126816101d1565b92915050565b60008151905061013b816101e8565b92915050565b60008060006060848603121561015657600080fd5b600061016486828701610117565b935050602061017586828701610117565b92505060406101868682870161012c565b9150509250925092565b600061019b826101a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6101da81610190565b81146101e557600080fd5b50565b6101f1816101c2565b81146101fc57600080fd5b50565b60805160601c60a05160601c60c05160e81c6101d7610234600039600060ea0152600060a20152600060c601526101d76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063c45a015514610064578063ddca3f4314610082575b600080fd5b61004e6100a0565b60405161005b919061012a565b60405180910390f35b61006c6100c4565b604051610079919061012a565b60405180910390f35b61008a6100e8565b6040516100979190610145565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61011581610160565b82525050565b61012481610192565b82525050565b600060208201905061013f600083018461010c565b92915050565b600060208201905061015a600083018461011b565b92915050565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220fd53d19a4f6b8f18bad8eecfbacedd68541113433c43eb2b7d512dc4dc15954c64736f6c63430008000033a2646970667358221220ecfbfffa1d1bb3c4de5250a9dd8161186995cdd068ee3257c4f72458b0f0b44664736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x89035730 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8B078BEB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xBBE4F6DB EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AB ADDRESS DUP5 DUP5 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH3 0xFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF22A25A14129CCCB17BCE9E817217F50B87F174703F53D602B376C35E0406881 DUP4 PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F6 SWAP3 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x618 SWAP1 PUSH2 0x6AB JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x40B DUP1 PUSH2 0x8C1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C7 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DC DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP5 DUP3 DUP6 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72C DUP6 DUP3 DUP7 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x750 DUP2 PUSH2 0x851 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x763 PUSH1 0x16 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH32 0x55707369646556313A205A45524F5F4144445245535300000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x80C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x819 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x839 DUP2 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP3 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x851 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8B2 DUP2 PUSH2 0x883 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x89035730 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0xFFFFFF AND PUSH1 0xC0 SWAP1 PUSH3 0xFFFFFF AND PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x175 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x186 DUP7 DUP3 DUP8 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 PUSH2 0x1A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x190 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE8 SHR PUSH2 0x1D7 PUSH2 0x234 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xEA ADD MSTORE PUSH1 0x0 PUSH1 0xA2 ADD MSTORE PUSH1 0x0 PUSH1 0xC6 ADD MSTORE PUSH2 0x1D7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B DUP3 PUSH2 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MSTORE8 0xD1 SWAP11 0x4F PUSH12 0x8F18BAD8EECFBACEDD685411 SGT NUMBER EXTCODECOPY NUMBER 0xEB 0x2B PUSH30 0x512DC4DC15954C64736F6C63430008000033A2646970667358221220ECFB SELFDESTRUCT STATICCALL SAR SHL 0xB3 0xC4 0xDE MSTORE POP 0xA9 0xDD DUP2 PUSH2 0x1869 SWAP6 0xCD 0xD0 PUSH9 0xEE3257C4F72458B0F0 0xB4 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "311:956:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;304:37:2;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;695:364:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:163;1186:5;;;;;;;;;;;1172:19;;:10;:19;;;1164:28;;;;;;1227:6;1207:27;;1220:5;;;;;;;;;;;1207:27;;;;;;;;;;;;1252:6;1244:5;;:14;;;;;;;;;;;;;;;;;;1102:163;:::o;304:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;695:364:0:-;793:12;843:1;825:20;;:6;:20;;;;817:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;917:1;890:29;;:7;:15;898:6;890:15;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;882:38;;;;;;938:35;953:4;960:6;968:4;938:6;:35::i;:::-;931:42;;1001:4;983:7;:15;991:6;983:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1041:4;1021:31;;1033:6;1021:31;;;1047:4;1021:31;;;;;;:::i;:::-;;;;;;;;695:364;;;;:::o;421:29::-;;;;;;;;;;;;;:::o;494:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;348:318:2:-;456:12;493:54;;;;;;;;530:5;493:54;;;;;;514:7;493:54;;;;;;542:3;493:54;;;;;480:10;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:5;623:3;605:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;595:33;;;;;;572:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:75;;649:10;;642:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:318;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;235:6;222:20;213:29;;251:32;277:5;251:32;:::i;:::-;203:86;;;;:::o;295:262::-;;403:2;391:9;382:7;378:23;374:32;371:2;;;419:1;416;409:12;371:2;462:1;487:53;532:7;523:6;512:9;508:22;487:53;:::i;:::-;477:63;;433:117;361:196;;;;:::o;563:405::-;;;687:2;675:9;666:7;662:23;658:32;655:2;;;703:1;700;693:12;655:2;746:1;771:53;816:7;807:6;796:9;792:22;771:53;:::i;:::-;761:63;;717:117;873:2;899:52;943:7;934:6;923:9;919:22;899:52;:::i;:::-;889:62;;844:117;645:323;;;;;:::o;974:118::-;1061:24;1079:5;1061:24;:::i;:::-;1056:3;1049:37;1039:53;;:::o;1098:320::-;;1261:67;1325:2;1320:3;1261:67;:::i;:::-;1254:74;;1358:24;1354:1;1349:3;1345:11;1338:45;1409:2;1404:3;1400:12;1393:19;;1244:174;;;:::o;1424:115::-;1509:23;1526:5;1509:23;:::i;:::-;1504:3;1497:36;1487:52;;:::o;1545:222::-;;1676:2;1665:9;1661:18;1653:26;;1689:71;1757:1;1746:9;1742:17;1733:6;1689:71;:::i;:::-;1643:124;;;;:::o;1773:438::-;;1958:2;1947:9;1943:18;1935:26;;1971:71;2039:1;2028:9;2024:17;2015:6;1971:71;:::i;:::-;2052:72;2120:2;2109:9;2105:18;2096:6;2052:72;:::i;:::-;2134:70;2200:2;2189:9;2185:18;2176:6;2134:70;:::i;:::-;1925:286;;;;;;:::o;2217:328::-;;2374:2;2363:9;2359:18;2351:26;;2387:71;2455:1;2444:9;2440:17;2431:6;2387:71;:::i;:::-;2468:70;2534:2;2523:9;2519:18;2510:6;2468:70;:::i;:::-;2341:204;;;;;:::o;2551:419::-;;2755:2;2744:9;2740:18;2732:26;;2804:9;2798:4;2794:20;2790:1;2779:9;2775:17;2768:47;2832:131;2958:4;2832:131;:::i;:::-;2824:139;;2722:248;;;:::o;2976:169::-;;3094:6;3089:3;3082:19;3134:4;3129:3;3125:14;3110:29;;3072:73;;;;:::o;3151:96::-;;3217:24;3235:5;3217:24;:::i;:::-;3206:35;;3196:51;;;:::o;3253:126::-;;3330:42;3323:5;3319:54;3308:65;;3298:81;;;:::o;3385:91::-;;3461:8;3454:5;3450:20;3439:31;;3429:47;;;:::o;3482:122::-;3555:24;3573:5;3555:24;:::i;:::-;3548:5;3545:35;3535:2;;3594:1;3591;3584:12;3535:2;3525:79;:::o;3610:120::-;3682:23;3699:5;3682:23;:::i;:::-;3675:5;3672:34;3662:2;;3720:1;3717;3710:12;3662:2;3652:78;:::o"
            },
            "methodIdentifiers": {
              "createPool(address,uint24)": "8b078beb",
              "getPool(address)": "bbe4f6db",
              "owner()": "8da5cb5b",
              "parameters()": "89035730",
              "setOwner(address)": "13af4035"
            }
          }
        }
      },
      "contracts/UpsideV1Pool.sol": {
        "UpsideV1Pool": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1485:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:7",
                            "type": ""
                          }
                        ],
                        "src": "7:143:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "218:79:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "228:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "243:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "237:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "237:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "285:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint24",
                                  "nodeType": "YulIdentifier",
                                  "src": "259:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "259:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "259:32:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint24_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "196:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "204:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "212:5:7",
                            "type": ""
                          }
                        ],
                        "src": "156:141:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "413:484:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "459:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "468:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "471:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "461:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "461:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "461:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "434:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "430:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "430:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "455:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "426:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "426:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "423:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "485:128:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "500:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "514:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "504:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "529:74:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "575:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "586:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "571:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "571:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "595:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "539:31:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "539:64:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "529:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "623:129:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "638:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "652:2:7",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "642:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "668:74:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "714:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "725:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "710:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "710:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "734:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "678:31:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "678:64:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "668:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "762:128:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "777:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "791:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "781:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "807:73:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "852:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "863:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "848:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "848:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint24_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "817:30:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "817:63:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "807:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint24_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "367:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "378:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "390:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "398:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "406:6:7",
                            "type": ""
                          }
                        ],
                        "src": "303:594:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "948:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "958:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "987:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "958:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "930:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "940:7:7",
                            "type": ""
                          }
                        ],
                        "src": "903:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1050:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1060:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1075:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1082:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1071:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1071:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1060:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1032:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1042:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1005:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1181:47:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1191:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1206:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1213:8:7",
                                    "type": "",
                                    "value": "0xffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1202:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1202:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1191:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1163:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1173:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1137:91:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1277:79:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1334:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1343:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1346:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1336:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1336:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1336:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1300:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1325:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1307:17:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1307:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1297:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1297:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1290:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1290:43:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1287:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1270:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1234:122:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1404:78:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1460:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1469:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1472:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1462:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1462:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1462:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1427:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1451:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint24",
                                          "nodeType": "YulIdentifier",
                                          "src": "1434:16:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1434:23:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1424:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1424:34:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1417:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1417:42:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1414:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1397:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1362:120:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60e060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1663890357306040518163ffffffff1660e01b815260040160606040518083038186803b15801561005757600080fd5b505afa15801561006b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008f9190610141565b8062ffffff1660c09062ffffff1660e81b8152508173ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508273ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506101ff565b600081519050610126816101d1565b92915050565b60008151905061013b816101e8565b92915050565b60008060006060848603121561015657600080fd5b600061016486828701610117565b935050602061017586828701610117565b92505060406101868682870161012c565b9150509250925092565b600061019b826101a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6101da81610190565b81146101e557600080fd5b50565b6101f1816101c2565b81146101fc57600080fd5b50565b60805160601c60a05160601c60c05160e81c6101d7610234600039600060ea0152600060a20152600060c601526101d76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063c45a015514610064578063ddca3f4314610082575b600080fd5b61004e6100a0565b60405161005b919061012a565b60405180910390f35b61006c6100c4565b604051610079919061012a565b60405180910390f35b61008a6100e8565b6040516100979190610145565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61011581610160565b82525050565b61012481610192565b82525050565b600060208201905061013f600083018461010c565b92915050565b600060208201905061015a600083018461011b565b92915050565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220fd53d19a4f6b8f18bad8eecfbacedd68541113433c43eb2b7d512dc4dc15954c64736f6c63430008000033",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x89035730 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0xFFFFFF AND PUSH1 0xC0 SWAP1 PUSH3 0xFFFFFF AND PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x175 DUP7 DUP3 DUP8 ADD PUSH2 0x117 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x186 DUP7 DUP3 DUP8 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 PUSH2 0x1A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x190 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE8 SHR PUSH2 0x1D7 PUSH2 0x234 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xEA ADD MSTORE PUSH1 0x0 PUSH1 0xA2 ADD MSTORE PUSH1 0x0 PUSH1 0xC6 ADD MSTORE PUSH2 0x1D7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B DUP3 PUSH2 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MSTORE8 0xD1 SWAP11 0x4F PUSH12 0x8F18BAD8EECFBACEDD685411 SGT NUMBER EXTCODECOPY NUMBER 0xEB 0x2B PUSH30 0x512DC4DC15954C64736F6C63430008000033000000000000000000000000 ",
              "sourceMap": "620:293:1:-:0;;;803:108;;;;;;;;;;880:10;858:44;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;834:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:293;;7:143:7;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:141::-;;243:6;237:13;228:22;;259:32;285:5;259:32;:::i;:::-;218:79;;;;:::o;303:594::-;;;;455:2;443:9;434:7;430:23;426:32;423:2;;;471:1;468;461:12;423:2;514:1;539:64;595:7;586:6;575:9;571:22;539:64;:::i;:::-;529:74;;485:128;652:2;678:64;734:7;725:6;714:9;710:22;678:64;:::i;:::-;668:74;;623:129;791:2;817:63;872:7;863:6;852:9;848:22;817:63;:::i;:::-;807:73;;762:128;413:484;;;;;:::o;903:96::-;;969:24;987:5;969:24;:::i;:::-;958:35;;948:51;;;:::o;1005:126::-;;1082:42;1075:5;1071:54;1060:65;;1050:81;;;:::o;1137:91::-;;1213:8;1206:5;1202:20;1191:31;;1181:47;;;:::o;1234:122::-;1307:24;1325:5;1307:24;:::i;:::-;1300:5;1297:35;1287:2;;1346:1;1343;1336:12;1287:2;1277:79;:::o;1362:120::-;1434:23;1451:5;1434:23;:::i;:::-;1427:5;1424:34;1414:2;;1472:1;1469;1462:12;1414:2;1404:78;:::o;620:293:1:-;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1032:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "72:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "89:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "112:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "94:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "94:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "82:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "60:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "67:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "194:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "211:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "233:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint24",
                                      "nodeType": "YulIdentifier",
                                      "src": "216:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "216:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "204:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "204:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "204:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "182:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "189:3:7",
                            "type": ""
                          }
                        ],
                        "src": "131:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "350:124:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "360:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "372:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "368:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "368:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "440:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "453:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "464:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "449:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "449:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "396:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "396:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "396:71:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "322:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "334:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "345:4:7",
                            "type": ""
                          }
                        ],
                        "src": "252:222:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "576:122:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "586:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "598:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "609:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "594:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "594:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "586:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "664:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "677:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "688:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "673:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "673:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "622:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "622:69:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "622:69:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "548:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "560:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "571:4:7",
                            "type": ""
                          }
                        ],
                        "src": "480:218:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "749:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "759:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "788:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "759:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "731:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "741:7:7",
                            "type": ""
                          }
                        ],
                        "src": "704:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "851:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "861:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "876:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "883:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "872:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "861:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "833:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "843:7:7",
                            "type": ""
                          }
                        ],
                        "src": "806:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "982:47:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "992:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1007:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1014:8:7",
                                    "type": "",
                                    "value": "0xffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1003:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "964:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "974:7:7",
                            "type": ""
                          }
                        ],
                        "src": "938:91:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "127": [
                  {
                    "length": 32,
                    "start": 198
                  }
                ],
                "130": [
                  {
                    "length": 32,
                    "start": 162
                  }
                ],
                "133": [
                  {
                    "length": 32,
                    "start": 234
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063c45a015514610064578063ddca3f4314610082575b600080fd5b61004e6100a0565b60405161005b919061012a565b60405180910390f35b61006c6100c4565b604051610079919061012a565b60405180910390f35b61008a6100e8565b6040516100979190610145565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61011581610160565b82525050565b61012481610192565b82525050565b600060208201905061013f600083018461010c565b92915050565b600060208201905061015a600083018461011b565b92915050565b600061016b82610172565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220fd53d19a4f6b8f18bad8eecfbacedd68541113433c43eb2b7d512dc4dc15954c64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B DUP3 PUSH2 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MSTORE8 0xD1 SWAP11 0x4F PUSH12 0x8F18BAD8EECFBACEDD685411 SGT NUMBER EXTCODECOPY NUMBER 0xEB 0x2B PUSH30 0x512DC4DC15954C64736F6C63430008000033000000000000000000000000 ",
              "sourceMap": "620:293:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;666:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;714:39;;;:::o;666:41::-;;;:::o;760:36::-;;;:::o;7:118:7:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:115::-;216:23;233:5;216:23;:::i;:::-;211:3;204:36;194:52;;:::o;252:222::-;;383:2;372:9;368:18;360:26;;396:71;464:1;453:9;449:17;440:6;396:71;:::i;:::-;350:124;;;;:::o;480:218::-;;609:2;598:9;594:18;586:26;;622:69;688:1;677:9;673:17;664:6;622:69;:::i;:::-;576:122;;;;:::o;704:96::-;;770:24;788:5;770:24;:::i;:::-;759:35;;749:51;;;:::o;806:126::-;;883:42;876:5;872:54;861:65;;851:81;;;:::o;938:91::-;;1014:8;1007:5;1003:20;992:31;;982:47;;;:::o"
            },
            "methodIdentifiers": {
              "factory()": "c45a0155",
              "fee()": "ddca3f43",
              "owner()": "8da5cb5b"
            }
          }
        }
      },
      "contracts/UpsideV1PoolDeployer.sol": {
        "UpsideV1PoolDeployer": {
          "abi": [
            {
              "inputs": [],
              "name": "parameters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610183806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638903573014610030575b600080fd5b610038610050565b604051610047939291906100d5565b60405180910390f35b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900462ffffff16905083565b6100c08161010c565b82525050565b6100cf8161013e565b82525050565b60006060820190506100ea60008301866100b7565b6100f760208301856100b7565b61010460408301846100c6565b949350505050565b60006101178261011e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220d3d4f5cd376e91caf53ef4822698d25d4ff2a1db1076fe5362ec3b6705aed6dc64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89035730 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0x10C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF DUP2 PUSH2 0x13E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH2 0x11E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD4 CREATE2 0xCD CALLDATACOPY PUSH15 0x91CAF53EF4822698D25D4FF2A1DB10 PUSH23 0xFE5362EC3B6705AED6DC64736F6C634300080000330000 ",
              "sourceMap": "144:524:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1024:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "72:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "89:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "112:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "94:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "94:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "82:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "60:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "67:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "194:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "211:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "233:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint24",
                                      "nodeType": "YulIdentifier",
                                      "src": "216:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "216:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "204:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "204:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "204:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "182:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "189:3:7",
                            "type": ""
                          }
                        ],
                        "src": "131:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "404:286:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "414:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "437:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "422:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "422:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "414:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "494:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "507:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "518:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "503:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "503:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "450:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "450:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "450:71:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "588:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "599:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "584:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "584:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "531:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "531:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "531:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "668:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "664:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "664:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "613:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "613:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "613:70:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "360:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "372:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "380:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "388:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "399:4:7",
                            "type": ""
                          }
                        ],
                        "src": "252:438:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "741:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "751:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "780:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "762:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "723:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "733:7:7",
                            "type": ""
                          }
                        ],
                        "src": "696:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "843:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "853:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "868:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "875:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "864:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "864:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "853:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "825:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "835:7:7",
                            "type": ""
                          }
                        ],
                        "src": "798:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "974:47:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "984:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "999:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1006:8:7",
                                    "type": "",
                                    "value": "0xffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "995:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "995:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "956:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "966:7:7",
                            "type": ""
                          }
                        ],
                        "src": "930:91:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638903573014610030575b600080fd5b610038610050565b604051610047939291906100d5565b60405180910390f35b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900462ffffff16905083565b6100c08161010c565b82525050565b6100cf8161013e565b82525050565b60006060820190506100ea60008301866100b7565b6100f760208301856100b7565b61010460408301846100c6565b949350505050565b60006101178261011e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff8216905091905056fea2646970667358221220d3d4f5cd376e91caf53ef4822698d25d4ff2a1db1076fe5362ec3b6705aed6dc64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89035730 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0x10C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF DUP2 PUSH2 0x13E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH2 0x11E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD4 CREATE2 0xCD CALLDATACOPY PUSH15 0x91CAF53EF4822698D25D4FF2A1DB10 PUSH23 0xFE5362EC3B6705AED6DC64736F6C634300080000330000 ",
              "sourceMap": "144:524:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:37;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:118:7:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:115::-;216:23;233:5;216:23;:::i;:::-;211:3;204:36;194:52;;:::o;252:438::-;;437:2;426:9;422:18;414:26;;450:71;518:1;507:9;503:17;494:6;450:71;:::i;:::-;531:72;599:2;588:9;584:18;575:6;531:72;:::i;:::-;613:70;679:2;668:9;664:18;655:6;613:70;:::i;:::-;404:286;;;;;;:::o;696:96::-;;762:24;780:5;762:24;:::i;:::-;751:35;;741:51;;;:::o;798:126::-;;875:42;868:5;864:54;853:65;;843:81;;;:::o;930:91::-;;1006:8;999:5;995:20;984:31;;974:47;;;:::o"
            },
            "methodIdentifiers": {
              "parameters()": "89035730"
            }
          }
        }
      },
      "contracts/interfaces/IUpsideV1Factory.sol": {
        "IUpsideV1Factory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "PoolCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "_fee",
                  "type": "uint24"
                }
              ],
              "name": "createPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createPool(address,uint24)": "8b078beb",
              "getPool(address)": "bbe4f6db",
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035"
            }
          }
        }
      },
      "contracts/interfaces/IUpsideV1Pool.sol": {
        "IUpsideV1Pool": {
          "abi": [
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "factory()": "c45a0155",
              "fee()": "ddca3f43",
              "owner()": "8da5cb5b"
            }
          }
        }
      },
      "contracts/interfaces/IUpsideV1PoolDeployer.sol": {
        "IUpsideV1PoolDeployer": {
          "abi": [
            {
              "inputs": [],
              "name": "parameters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "parameters()": "89035730"
            }
          }
        }
      },
      "contracts/interfaces/pool/IUpsideV1PoolImmutables.sol": {
        "IUniswapV3PoolImmutables": {
          "abi": [
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "factory()": "c45a0155",
              "fee()": "ddca3f43",
              "owner()": "8da5cb5b"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/UpsideV1Pool.sol:26:5:\n   |\n26 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 911,
          "file": "contracts/UpsideV1Pool.sol",
          "start": 803
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/UpsideV1Factory.sol": {
        "ast": {
          "absolutePath": "contracts/UpsideV1Factory.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              301
            ],
            "IUpsideV1Factory": [
              259
            ],
            "IUpsideV1Pool": [
              265
            ],
            "IUpsideV1PoolDeployer": [
              279
            ],
            "UpsideV1Factory": [
              118
            ],
            "UpsideV1Pool": [
              150
            ],
            "UpsideV1PoolDeployer": [
              209
            ]
          },
          "id": 119,
          "license": "BUSL-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:0"
            },
            {
              "absolutePath": "contracts/interfaces/IUpsideV1Factory.sol",
              "file": "./interfaces/IUpsideV1Factory.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 119,
              "sourceUnit": 260,
              "src": "62:43:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/UpsideV1PoolDeployer.sol",
              "file": "./UpsideV1PoolDeployer.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 119,
              "sourceUnit": 210,
              "src": "107:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/UpsideV1Pool.sol",
              "file": "./UpsideV1Pool.sol",
              "id": 4,
              "nodeType": "ImportDirective",
              "scope": 119,
              "sourceUnit": 151,
              "src": "145:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "IUpsideV1Factory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 259,
                    "src": "339:16:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "339:16:0"
                },
                {
                  "baseName": {
                    "id": 8,
                    "name": "UpsideV1PoolDeployer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 209,
                    "src": "357:20:0"
                  },
                  "id": 9,
                  "nodeType": "InheritanceSpecifier",
                  "src": "357:20:0"
                }
              ],
              "contractDependencies": [
                209,
                259,
                279
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 5,
                "nodeType": "StructuredDocumentation",
                "src": "176:135:0",
                "text": "@title Canonical Uniswap V3 factory\n @notice Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees"
              },
              "fullyImplemented": true,
              "id": 118,
              "linearizedBaseContracts": [
                118,
                209,
                279,
                259
              ],
              "name": "UpsideV1Factory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    234
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 10,
                    "nodeType": "StructuredDocumentation",
                    "src": "384:32:0",
                    "text": "@inheritdoc IUpsideV1Factory"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 13,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 12,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "436:8:0"
                  },
                  "scope": 118,
                  "src": "421:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    242
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "457:32:0",
                    "text": "@inheritdoc IUpsideV1Factory"
                  },
                  "functionSelector": "bbe4f6db",
                  "id": 19,
                  "mutability": "mutable",
                  "name": "getPool",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 18,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "529:8:0"
                  },
                  "scope": 118,
                  "src": "494:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 17,
                    "keyType": {
                      "id": 15,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "502:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "494:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 16,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "513:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "566:86:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "576:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 23,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "584:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "584:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "576:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26,
                        "nodeType": "ExpressionStatement",
                        "src": "576:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "630:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 29,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "622:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 28,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "622:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "622:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 32,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "634:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "634:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 27,
                            "name": "OwnerChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "609:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "609:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35,
                        "nodeType": "EmitStatement",
                        "src": "604:41:0"
                      }
                    ]
                  },
                  "id": 37,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "563:2:0"
                  },
                  "returnParameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "566:0:0"
                  },
                  "scope": 118,
                  "src": "552:100:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    252
                  ],
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "807:252:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "825:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 52,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "843:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 51,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "835:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 50,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "835:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 53,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "835:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "825:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "55707369646556313a205a45524f5f41444452455353",
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "847:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796",
                                "typeString": "literal_string \"UpsideV1: ZERO_ADDRESS\""
                              },
                              "value": "UpsideV1: ZERO_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1339d2ee98048c8df7025c2d7eac2fb634fb8e377ae99d9cc91738cefa4dc796",
                                "typeString": "literal_string \"UpsideV1: ZERO_ADDRESS\""
                              }
                            ],
                            "id": 48,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "817:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "817:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "817:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 59,
                                  "name": "getPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "890:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 61,
                                "indexExpression": {
                                  "id": 60,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "898:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "890:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 64,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "917:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "909:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 62,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "909:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 65,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "909:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "890:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 58,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "882:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "882:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "882:38:0"
                      },
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 69,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "931:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 73,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "953:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UpsideV1Factory_$118",
                                      "typeString": "contract UpsideV1Factory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UpsideV1Factory_$118",
                                      "typeString": "contract UpsideV1Factory"
                                    }
                                  ],
                                  "id": 72,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "945:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 71,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "945:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "945:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 75,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "960:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 76,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "968:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "id": 70,
                              "name": "deploy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "938:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                                "typeString": "function (address,address,uint24) returns (address)"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "938:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "931:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "931:42:0"
                      },
                      {
                        "expression": {
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 80,
                              "name": "getPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "983:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 82,
                            "indexExpression": {
                              "id": 81,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "991:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "983:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 83,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1001:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "983:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "983:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1033:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 88,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1041:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "id": 89,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "1047:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "PoolCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "1021:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint24_$_t_address_$returns$__$",
                              "typeString": "function (address,uint24,address)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1021:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "EmitStatement",
                        "src": "1016:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 38,
                    "nodeType": "StructuredDocumentation",
                    "src": "658:32:0",
                    "text": "@inheritdoc IUpsideV1Factory"
                  },
                  "functionSelector": "8b078beb",
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 44,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "775:8:0"
                  },
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "724:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "724:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "748:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "748:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "714:51:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "793:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:14:0"
                  },
                  "scope": 118,
                  "src": "695:364:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    258
                  ],
                  "body": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "1154:111:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 101,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1172:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1172:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 103,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "1186:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1172:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 100,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1164:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "1164:28:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 108,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1220:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 109,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1227:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 107,
                            "name": "OwnerChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "1207:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1207:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "EmitStatement",
                        "src": "1202:32:0"
                      },
                      {
                        "expression": {
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 112,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1244:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 113,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1252:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1244:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "1065:32:0",
                    "text": "@inheritdoc IUpsideV1Factory"
                  },
                  "functionSelector": "13af4035",
                  "id": 117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOwner",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 98,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1145:8:0"
                  },
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 117,
                        "src": "1120:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1120:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1119:16:0"
                  },
                  "returnParameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1154:0:0"
                  },
                  "scope": 118,
                  "src": "1102:163:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 119,
              "src": "311:956:0"
            }
          ],
          "src": "37:1231:0"
        },
        "id": 0
      },
      "contracts/UpsideV1Pool.sol": {
        "ast": {
          "absolutePath": "contracts/UpsideV1Pool.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              301
            ],
            "IUpsideV1Pool": [
              265
            ],
            "IUpsideV1PoolDeployer": [
              279
            ],
            "UpsideV1Pool": [
              150
            ]
          },
          "id": 151,
          "license": "BUSL-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 120,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:23:1"
            },
            {
              "absolutePath": "contracts/interfaces/IUpsideV1Pool.sol",
              "file": "./interfaces/IUpsideV1Pool.sol",
              "id": 121,
              "nodeType": "ImportDirective",
              "scope": 151,
              "sourceUnit": 266,
              "src": "315:40:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IUpsideV1PoolDeployer.sol",
              "file": "./interfaces/IUpsideV1PoolDeployer.sol",
              "id": 122,
              "nodeType": "ImportDirective",
              "scope": 151,
              "sourceUnit": 280,
              "src": "356:48:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 123,
                    "name": "IUpsideV1Pool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 265,
                    "src": "645:13:1"
                  },
                  "id": 124,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:13:1"
                }
              ],
              "contractDependencies": [
                265,
                301
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 150,
              "linearizedBaseContracts": [
                150,
                265,
                301
              ],
              "name": "UpsideV1Pool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    288
                  ],
                  "constant": false,
                  "functionSelector": "c45a0155",
                  "id": 127,
                  "mutability": "immutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 126,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "691:8:1"
                  },
                  "scope": 150,
                  "src": "666:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    294
                  ],
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 130,
                  "mutability": "immutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 129,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "739:8:1"
                  },
                  "scope": 150,
                  "src": "714:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    300
                  ],
                  "constant": false,
                  "functionSelector": "ddca3f43",
                  "id": 133,
                  "mutability": "immutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 132,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "784:8:1"
                  },
                  "scope": 150,
                  "src": "760:36:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "824:87:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 136,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "835:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 137,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130,
                                "src": "844:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 138,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "851:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "id": 139,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "834:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                              "typeString": "tuple(address,address,uint24)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 141,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "880:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "880:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 140,
                                  "name": "IUpsideV1PoolDeployer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "858:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUpsideV1PoolDeployer_$279_$",
                                    "typeString": "type(contract IUpsideV1PoolDeployer)"
                                  }
                                },
                                "id": 143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "858:33:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUpsideV1PoolDeployer_$279",
                                  "typeString": "contract IUpsideV1PoolDeployer"
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "parameters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 278,
                              "src": "858:44:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_address_$_t_uint24_$",
                                "typeString": "function () view external returns (address,address,uint24)"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "858:46:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                              "typeString": "tuple(address,address,uint24)"
                            }
                          },
                          "src": "834:70:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "ExpressionStatement",
                        "src": "834:70:1"
                      }
                    ]
                  },
                  "id": 149,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:2:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "824:0:1"
                  },
                  "scope": 150,
                  "src": "803:108:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 151,
              "src": "620:293:1"
            }
          ],
          "src": "38:876:1"
        },
        "id": 1
      },
      "contracts/UpsideV1PoolDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/UpsideV1PoolDeployer.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              301
            ],
            "IUpsideV1Pool": [
              265
            ],
            "IUpsideV1PoolDeployer": [
              279
            ],
            "UpsideV1Pool": [
              150
            ],
            "UpsideV1PoolDeployer": [
              209
            ]
          },
          "id": 210,
          "license": "BUSL-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 152,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:23:2"
            },
            {
              "absolutePath": "contracts/interfaces/IUpsideV1PoolDeployer.sol",
              "file": "./interfaces/IUpsideV1PoolDeployer.sol",
              "id": 153,
              "nodeType": "ImportDirective",
              "scope": 210,
              "sourceUnit": 280,
              "src": "63:48:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/UpsideV1Pool.sol",
              "file": "./UpsideV1Pool.sol",
              "id": 154,
              "nodeType": "ImportDirective",
              "scope": 210,
              "sourceUnit": 151,
              "src": "113:28:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IUpsideV1PoolDeployer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 279,
                    "src": "177:21:2"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "177:21:2"
                }
              ],
              "contractDependencies": [
                150,
                279
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 209,
              "linearizedBaseContracts": [
                209,
                279
              ],
              "name": "UpsideV1PoolDeployer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "UpsideV1PoolDeployer.Parameters",
                  "id": 163,
                  "members": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "233:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "233:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "256:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "256:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "281:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "281:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Parameters",
                  "nodeType": "StructDefinition",
                  "scope": 209,
                  "src": "205:93:2",
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    278
                  ],
                  "constant": false,
                  "functionSelector": "89035730",
                  "id": 167,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 166,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "322:8:2"
                  },
                  "scope": 209,
                  "src": "304:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Parameters_$163_storage",
                    "typeString": "struct UpsideV1PoolDeployer.Parameters"
                  },
                  "typeName": {
                    "id": 165,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 164,
                      "name": "Parameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 163,
                      "src": "304:10:2"
                    },
                    "referencedDeclaration": 163,
                    "src": "304:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$163_storage_ptr",
                      "typeString": "struct UpsideV1PoolDeployer.Parameters"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "470:196:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 178,
                            "name": "parameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "480:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Parameters_$163_storage",
                              "typeString": "struct UpsideV1PoolDeployer.Parameters storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 180,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 169,
                                "src": "514:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 181,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "530:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 182,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "542:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "id": 179,
                              "name": "Parameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "493:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Parameters_$163_storage_ptr_$",
                                "typeString": "type(struct UpsideV1PoolDeployer.Parameters storage pointer)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "factory",
                              "owner",
                              "fee"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "493:54:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Parameters_$163_memory_ptr",
                              "typeString": "struct UpsideV1PoolDeployer.Parameters memory"
                            }
                          },
                          "src": "480:67:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$163_storage",
                            "typeString": "struct UpsideV1PoolDeployer.Parameters storage ref"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "480:67:2"
                      },
                      {
                        "expression": {
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 186,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "557:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "572:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UpsideV1Pool_$150_$",
                                      "typeString": "function () returns (contract UpsideV1Pool)"
                                    },
                                    "typeName": {
                                      "id": 190,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 189,
                                        "name": "UpsideV1Pool",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 150,
                                        "src": "576:12:2"
                                      },
                                      "referencedDeclaration": 150,
                                      "src": "576:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UpsideV1Pool_$150",
                                        "typeString": "contract UpsideV1Pool"
                                      }
                                    }
                                  },
                                  "id": 199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "salt"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 195,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 171,
                                              "src": "616:5:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 196,
                                              "name": "fee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 173,
                                              "src": "623:3:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                              }
                                            ],
                                            "expression": {
                                              "id": 193,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "605:3:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encode",
                                            "nodeType": "MemberAccess",
                                            "src": "605:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 197,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "605:22:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 192,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "595:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 198,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "595:33:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "src": "572:57:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UpsideV1Pool_$150_$salt",
                                    "typeString": "function () returns (contract UpsideV1Pool)"
                                  }
                                },
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "572:59:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UpsideV1Pool_$150",
                                  "typeString": "contract UpsideV1Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UpsideV1Pool_$150",
                                  "typeString": "contract UpsideV1Pool"
                                }
                              ],
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "564:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 187,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "564:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "564:68:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "557:75:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "557:75:2"
                      },
                      {
                        "expression": {
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "642:17:2",
                          "subExpression": {
                            "id": 204,
                            "name": "parameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "649:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Parameters_$163_storage",
                              "typeString": "struct UpsideV1PoolDeployer.Parameters storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "642:17:2"
                      }
                    ]
                  },
                  "id": 208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "373:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "398:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "398:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "421:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "421:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "363:74:2"
                  },
                  "returnParameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "456:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "456:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "455:14:2"
                  },
                  "scope": 209,
                  "src": "348:318:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 210,
              "src": "144:524:2"
            }
          ],
          "src": "38:631:2"
        },
        "id": 2
      },
      "contracts/interfaces/IUpsideV1Factory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IUpsideV1Factory.sol",
          "exportedSymbols": {
            "IUpsideV1Factory": [
              259
            ]
          },
          "id": 260,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 211,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 212,
                "nodeType": "StructuredDocumentation",
                "src": "72:161:3",
                "text": "@title The interface for the Upside V1 Factory\n @notice The Upside V1 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
              },
              "fullyImplemented": false,
              "id": 259,
              "linearizedBaseContracts": [
                259
              ],
              "name": "IUpsideV1Factory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "266:185:3",
                    "text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
                  },
                  "id": 219,
                  "name": "OwnerChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "475:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "501:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "474:52:3"
                  },
                  "src": "456:71:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "533:267:3",
                    "text": "@notice Emitted when a pool is created\n @param owner The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param pool The address of the created pool"
                  },
                  "id": 228,
                  "name": "PoolCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "832:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "832:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "863:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 226,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "891:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:87:3"
                  },
                  "src": "805:105:3"
                },
                {
                  "documentation": {
                    "id": 229,
                    "nodeType": "StructuredDocumentation",
                    "src": "916:163:3",
                    "text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 234,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1098:2:3"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "1124:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1124:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1123:9:3"
                  },
                  "scope": 259,
                  "src": "1084:49:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 235,
                    "nodeType": "StructuredDocumentation",
                    "src": "1139:300:3",
                    "text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param _owner The contract address of the other token\n @return pool The pool address"
                  },
                  "functionSelector": "bbe4f6db",
                  "id": 242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "1470:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1470:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1460:30:3"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "1514:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1514:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1513:14:3"
                  },
                  "scope": 259,
                  "src": "1444:84:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "1534:491:3",
                    "text": "@notice Creates a pool for the given two tokens and fee\n @param _owner The other of the two tokens in the desired pool\n @param _fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
                  },
                  "functionSelector": "8b078beb",
                  "id": 252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2059:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2059:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2083:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2083:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2049:51:3"
                  },
                  "returnParameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2119:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:14:3"
                  },
                  "scope": 259,
                  "src": "2030:103:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "2139:144:3",
                    "text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
                  },
                  "functionSelector": "13af4035",
                  "id": 258,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "2306:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2306:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2305:16:3"
                  },
                  "returnParameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2330:0:3"
                  },
                  "scope": 259,
                  "src": "2288:43:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 260,
              "src": "233:2100:3"
            }
          ],
          "src": "45:2289:3"
        },
        "id": 3
      },
      "contracts/interfaces/IUpsideV1Pool.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IUpsideV1Pool.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              301
            ],
            "IUpsideV1Pool": [
              265
            ]
          },
          "id": 266,
          "license": "BUSL-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 261,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:4"
            },
            {
              "absolutePath": "contracts/interfaces/pool/IUpsideV1PoolImmutables.sol",
              "file": "./pool/IUpsideV1PoolImmutables.sol",
              "id": 262,
              "nodeType": "ImportDirective",
              "scope": 266,
              "sourceUnit": 302,
              "src": "64:44:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 263,
                    "name": "IUniswapV3PoolImmutables",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 301,
                    "src": "138:24:4"
                  },
                  "id": 264,
                  "nodeType": "InheritanceSpecifier",
                  "src": "138:24:4"
                }
              ],
              "contractDependencies": [
                301
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 265,
              "linearizedBaseContracts": [
                265,
                301
              ],
              "name": "IUpsideV1Pool",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 266,
              "src": "111:56:4"
            }
          ],
          "src": "38:130:4"
        },
        "id": 4
      },
      "contracts/interfaces/IUpsideV1PoolDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IUpsideV1PoolDeployer.sol",
          "exportedSymbols": {
            "IUpsideV1PoolDeployer": [
              279
            ]
          },
          "id": 280,
          "license": "BUSL-1.1",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 267,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 268,
                "nodeType": "StructuredDocumentation",
                "src": "64:403:5",
                "text": "@title An interface for a contract that is capable of deploying Uniswap V3 Pools\n @notice A contract that constructs a pool must implement this to pass arguments to the pool\n @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain"
              },
              "fullyImplemented": false,
              "id": 279,
              "linearizedBaseContracts": [
                279
              ],
              "name": "IUpsideV1PoolDeployer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "505:560:5",
                    "text": "@notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n @dev Called by the pool constructor to fetch the parameters of the pool\n Returns factory The factory address\n Returns token0 The first token of the pool by address sort order\n Returns token1 The second token of the pool by address sort order\n Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n Returns tickSpacing The minimum number of ticks between initialized ticks"
                  },
                  "functionSelector": "89035730",
                  "id": 278,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "parameters",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1089:2:5"
                  },
                  "returnParameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1152:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1179:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1179:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1208:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1208:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1138:90:5"
                  },
                  "scope": 279,
                  "src": "1070:159:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 280,
              "src": "467:764:5"
            }
          ],
          "src": "37:1195:5"
        },
        "id": 5
      },
      "contracts/interfaces/pool/IUpsideV1PoolImmutables.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/pool/IUpsideV1PoolImmutables.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              301
            ]
          },
          "id": 302,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 281,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 282,
                "nodeType": "StructuredDocumentation",
                "src": "72:153:6",
                "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
              },
              "fullyImplemented": false,
              "id": 301,
              "linearizedBaseContracts": [
                301
              ],
              "name": "IUniswapV3PoolImmutables",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "266:138:6",
                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                  },
                  "functionSelector": "c45a0155",
                  "id": 288,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "425:2:6"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "451:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "451:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "450:9:6"
                  },
                  "scope": 301,
                  "src": "409:51:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:113:6",
                    "text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "598:2:6"
                  },
                  "returnParameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "624:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:9:6"
                  },
                  "scope": 301,
                  "src": "584:49:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 295,
                    "nodeType": "StructuredDocumentation",
                    "src": "639:84:6",
                    "text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
                  },
                  "functionSelector": "ddca3f43",
                  "id": 300,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "740:2:6"
                  },
                  "returnParameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "766:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "765:8:6"
                  },
                  "scope": 301,
                  "src": "728:46:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 302,
              "src": "225:551:6"
            }
          ],
          "src": "45:732:6"
        },
        "id": 6
      }
    }
  }
}
